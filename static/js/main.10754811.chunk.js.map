{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","reversedList","setReversedList","NONE","sortTypesList","setSortType","sortedList","goods","reverse","sort","visibleGoods","a","b","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","isModified","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAqCF,mBAASH,EAASM,MAAvD,mBAAOC,EAAP,KAAsBC,EAAtB,KAmBMC,EAhDR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaD,MAAK,SAACE,EAAGC,GACpB,OAAQH,GACN,KAAKZ,EAASgB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITR,GACFE,EAAaF,UAGRE,EAwBYO,CACjBnB,EACAG,EACAG,GAGIc,EAAad,IAAkBP,EAASM,MAAQF,EAEtD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYjB,IAAkBP,EAASgB,WAG7CS,QApCe,WACrBjB,EAAYR,EAASgB,WA2BjB,iCAaA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAkBP,EAASkB,SAE3CO,QA3Ca,WACnBjB,EAAYR,EAASkB,SAoCjB,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAapB,IAEjBqB,QAlDY,WAClBpB,GAAgB,SAACM,GAAD,OAAcA,MA2C1B,qBAWCU,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAvDY,WACpBjB,EAAYR,EAASM,MACrBD,GAAgB,IAkDV,sBAUJ,6BACE,6BACGI,EAAWiB,KAAI,SAAAC,GAAI,OAClB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cCnInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.10754811.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  reverse: boolean,\n  sort: SortType,\n): string[] {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sort) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (reverse) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reversedList, setReversedList] = useState(false);\n  const [sortTypesList, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const listReverse = () => {\n    setReversedList((reverse) => !reverse);\n  };\n\n  const resetSettings = () => {\n    setSortType(SortType.NONE);\n    setReversedList(false);\n  };\n\n  const sortedList = getReorderedGoods(\n    goodsFromServer,\n    reversedList,\n    sortTypesList,\n  );\n\n  const isModified = sortTypesList !== SortType.NONE || reversedList;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button is-info',\n              { 'is-light': sortTypesList !== SortType.ALPHABET },\n            )\n          }\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortTypesList !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !reversedList },\n          )}\n          onClick={listReverse}\n        >\n          Reverse\n        </button>\n\n        {isModified && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSettings}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {sortedList.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}